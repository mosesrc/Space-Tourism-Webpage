@inject IJSRuntime JsRuntime
@using BlazorAnimate;

<div class="NavBar">
    <div><img class="logo" src="assets/shared/logo.svg"></div>
    <div class="line"></div>
    <div class="NavRect" data-visible="false">
        <ul>
            <li> <a href="/" @onclick="@(async () => { Home(); await ChangeBackground(); } )"> <span class="bold">00</span> <span>HOME</span> </a> </li>
            <li> <a href="destinations" @onclick="@(async () => { Destination(); await ChangeBackground(); } )"> <span class="bold">01</span> <span>DESTINATION</span> </a> </li>
            <li> <a href="crew-members" @onclick="@(async () => { Crew(); await ChangeBackground(); } )"> <span class="bold">02</span> <span>CREW</span> </a> </li>
            <li> <a href="technologies" @onclick="@(async () => { Technology(); await ChangeBackground(); } )"> <span class="bold">03</span> <span>TECHNOLOGY</span> </a> </li>
        </ul>
    </div>
    <button class="toggle-nav-icon" @onclick="ToggleNav" aria-controls="primary-navigation" aria-expanded="false" />
</div>

@code {
    public string bgUrl = "/assets/crew/background-crew-desktop.jpg";
    public string homeDesktopUrl = "/assets/home/background-home-desktop.jpg";
    public string destDesktopUrl = "/assets/destination/background-destination-desktop.jpg";
    public string crewDesktopUrl = "/assets/crew/background-crew-desktop.jpg";
    public string techDesktopUrl = "/assets/technology/background-technology-desktop.jpg";

    async Task ChangeBackground()
    {
        await JsRuntime.InvokeVoidAsync(identifier: "backgroundImgChange", bgUrl);
    }


    async Task ToggleNav()
    {
        await JsRuntime.InvokeVoidAsync(identifier: "toggleNav", bgUrl);
    }


    public void Home()
    {
        bgUrl = homeDesktopUrl;
    }

    public void Destination()
    {
        bgUrl = destDesktopUrl;
    }

    public void Crew()
    {
        bgUrl = crewDesktopUrl;
    }

    public void Technology()
    {
        bgUrl = techDesktopUrl;
    }
}
